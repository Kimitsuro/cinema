{% extends 'base.html.twig' %}

{% block title %}–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç - –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä –°–∞–∫—É—Ä–∞{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/employee.css') }}?v={{ "now"|date("U") }}">
{% endblock %}

{% block body %}
    <!-- Main Content -->
    <main class="main-content">
        <!-- Sidebar Navigation -->
        <aside class="sidebar">
            <h2 class="sidebar-title">–ü–∞–Ω–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</h2>
            <nav>
                <ul class="nav-menu">
                    <li class="nav-item">
                        <a href="#" class="nav-linck active" data-section="dashboard">
                            <span class="nav-icon">üìä</span>
                            <span>–î–∞—à–±–æ—Ä–¥</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-linck" data-section="schedule">
                            <span class="nav-icon">üìÖ</span>
                            <span>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-linck" data-section="occupancy">
                            <span class="nav-icon">üé≠</span>
                            <span>–ó–∞–Ω—è—Ç–æ—Å—Ç—å –º–µ—Å—Ç</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-linck" data-section="refunds">
                            <span class="nav-icon">üí∞</span>
                            <span>–í–æ–∑–≤—Ä–∞—Ç—ã</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Content Area -->
        <div class="content-area">
            <!-- Dashboard Section -->
            <section class="content-section active" data-section="dashboard">
                <h1 class="section-title">–î–∞—à–±–æ—Ä–¥</h1>
                
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number">{{ stats.todaySessions }}</div>
                        <div class="stat-label">–°–µ–∞–Ω—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{{ stats.ticketsSold }}</div>
                        <div class="stat-label">–ü—Ä–æ–¥–∞–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{{ stats.pendingRefunds }}</div>
                        <div class="stat-label">–ó–∞—è–≤–æ–∫ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">{{ stats.occupancyRate }}%</div>
                        <div class="stat-label">–ó–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å</div>
                    </div>
                </div>

                <h3 style="color: var(--text-primary); margin-bottom: 1rem;">–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —Å–µ–∞–Ω—Å—ã</h3>
                <div class="sessions-list">
                    {% for session in todaySessions %}
                    <div class="session-item">
                        <div class="session-header">
                            <div class="session-movie">{{ session.movie.movieTitle }}</div>
                            <div class="session-time">{{ session.sessionData|date('H:i') }}</div>
                        </div>
                        <div class="session-details">
                            <div class="session-detail">
                                <div class="detail-label">–ó–∞–ª</div>
                                <div class="detail-value">{{ session.hall.id }}</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–ü—Ä–æ–¥–∞–Ω–æ</div>
                                <div class="detail-value">{{ session.tickets|length }}/{{ session.hall.hallCapacity }}</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–í—ã—Ä—É—á–∫–∞</div>
                                <div class="detail-value">{{ (session.tickets|length * session.sessionPrice)|number_format(0, '', ' ') }} ‚ÇΩ</div>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </section>

            <!-- Schedule Section -->
            <section class="content-section" data-section="schedule">
                <h1 class="section-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º</h1>
                
                <div class="schedule-controls">
                    <input type="date" class="date-picker" value="{{ "now"|date('Y-m-d') }}">
                    <button class="btn btn-primary" onclick="openSessionModal()">+ –î–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å</button>
                </div>

                <div class="schedule-grid">
                    {% for day, sessions in schedule %}
                    <div class="schedule-day">
                        <div class="day-header">
                            <div class="day-title">{{ day|date('d.m.Y - l') }}</div>
                            <span style="color: var(--text-muted);">{{ sessions|length }} —Å–µ–∞–Ω—Å–æ–≤</span>
                        </div>
                        <div class="sessions-list">
                            {% for session in sessions %}
                            <div class="session-item">
                                <div class="session-header">
                                    <div class="session-movie">{{ session.movie.movieTitle }}</div>
                                    <div class="session-time">{{ session.sessionData|date('H:i') }}</div>
                                </div>
                                <div class="session-details">
                                    <div class="session-detail">
                                        <div class="detail-label">–ó–∞–ª</div>
                                        <div class="detail-value">{{ session.hall.id }}</div>
                                    </div>
                                    <div class="session-detail">
                                        <div class="detail-label">–¶–µ–Ω–∞</div>
                                        <div class="detail-value">{{ session.sessionPrice }} ‚ÇΩ</div>
                                    </div>
                                    <div class="session-detail">
                                        <div class="detail-label">–ü—Ä–æ–¥–∞–Ω–æ</div>
                                        <div class="detail-value">{{ session.tickets|length }}/{{ session.hall.hallCapacity }}</div>
                                    </div>
                                </div>
                                <div class="session-actions">
                                    <button class="btn btn-secondary btn-small" onclick="editSession({{ session.id }})">–ò–∑–º–µ–Ω–∏—Ç—å</button>
                                    <button class="btn btn-danger btn-small" onclick="deleteSession({{ session.id }})">–£–¥–∞–ª–∏—Ç—å</button>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </section>

            <!-- Seat Occupancy Section -->
            <section class="content-section" data-section="occupancy">
                <h1 class="section-title">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –º–µ—Å—Ç</h1>
                
                <div class="hall-selector">
                    {% for hall in halls %}
                        <button class="hall-btn {{ loop.first ? 'active' : '' }}" data-hall="{{ hall.id }}">
                            –ó–∞–ª {{ hall.id }} - {{ hall.hallType }}
                        </button>
                    {% endfor %}
                </div>

                <div class="schedule-controls">
                    <select class="form-select session-select" style="width: auto;" onchange="updateOccupancySeats()">
                        <option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∞–Ω—Å</option>
                    </select>
                </div>

                <div class="occupancy-container">
                    <div class="screen">
                        <div class="screen-text">–≠–ö–†–ê–ù</div>
                    </div>

                    <div class="seats-grid" id="occupancySeats">
                        <!-- –ú–µ—Å—Ç–∞ –±—É–¥—É—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã JavaScript -->
                    </div>

                    <div class="occupancy-legend">
                        <div class="legend-item">
                            <div class="legend-seat economy" style="background: var(--seat-economy); border-color: var(--seat-economy);"></div>
                            <span>–≠–∫–æ–Ω–æ–º (—Å–≤–æ–±–æ–¥–Ω–æ)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-seat regular" style="background: var(--seat-regular); border-color: var(--seat-regular);"></div>
                            <span>–û–±—ã—á–Ω—ã–µ (—Å–≤–æ–±–æ–¥–Ω–æ)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-seat occupied" style="background: var(--seat-occupied); border-color: var(--seat-occupied);"></div>
                            <span>–ó–∞–Ω—è—Ç—ã–µ</span>
                        </div>
                    </div>

                    <div style="text-align: center; margin-top: 2rem;">
                        <div id="occupancyStats" style="display: inline-block; background: var(--primary-dark); padding: 1rem; border-radius: 8px;">
                            <strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> –ü—Ä–æ–¥–∞–Ω–æ 0 –∏–∑ 0 –º–µ—Å—Ç (0% –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å)
                        </div>
                    </div>
                </div>
            </section>

            <!-- Refunds Section -->
            <section class="content-section" data-section="refunds">
                <h1 class="section-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏</h1>
                
                <div class="refunds-filter">
                    <button class="filter-btn active" data-filter="all">–í—Å–µ –∑–∞—è–≤–∫–∏</button>
                    <button class="filter-btn" data-filter="pending">–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</button>
                    <button class="filter-btn" data-filter="approved">–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ</button>
                    <button class="filter-btn" data-filter="rejected">–û—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–µ</button>
                </div>

                <div class="refunds-grid">
                    {% for refund in refunds %}
                    <div class="refund-card" data-status="{{ refund.refundStatus }}">
                        <div class="refund-header">
                            <div class="refund-id">–í–æ–∑–≤—Ä–∞—Ç #{{ refund.id }}</div>
                            <span class="refund-status {{ refund.refundStatus }}">{{ refund.refundStatus|trans({
                                'pending': '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
                                'approved': '–û–¥–æ–±—Ä–µ–Ω',
                                'rejected': '–û—Ç–∫–ª–æ–Ω—ë–Ω'
                            }) }}</span>
                        </div>
                        
                        <div class="refund-details">
                            <div class="session-detail">
                                <div class="detail-label">–ö–ª–∏–µ–Ω—Ç</div>
                                <div class="detail-value">{{ refund.goer.goerName }}</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–§–∏–ª—å–º</div>
                                <div class="detail-value">{{ refund.ticket.session.movie.movieTitle }}</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–î–∞—Ç–∞ —Å–µ–∞–Ω—Å–∞</div>
                                <div class="detail-value">{{ refund.ticket.session.sessionData|date('d.m.Y –≤ H:i') }}</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–°—É–º–º–∞</div>
                                <div class="detail-value">{{ refund.ticket.session.sessionPrice }} ‚ÇΩ</div>
                            </div>
                            <div class="session-detail">
                                <div class="detail-label">–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏</div>
                                <div class="detail-value">{{ refund.refundDate|date('d.m.Y') }}</div>
                            </div>
                        </div>

                        <div class="refund-reason">
                            "{{ refund.refundReason }}"
                        </div>

                        {% if refund.refundStatus == 'pending' %}
                        <div class="refund-actions">
                            <button class="btn btn-success btn-small" onclick="approveRefund({{ refund.id }})">–û–¥–æ–±—Ä–∏—Ç—å</button>
                            <button class="btn btn-danger btn-small" onclick="rejectRefund({{ refund.id }})">–û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
                        </div>
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
            </section>
        </div>
    </main>

    <!-- Session Modal -->
    <div class="modal" id="sessionModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="modalTitle">–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å</h3>
                <button class="modal-close" onclick="closeSessionModal()">√ó</button>
            </div>
            
            <form id="sessionForm">
                <input type="hidden" id="session_id" name="session_id">
                <div class="form-group">
                    <label class="form-label" for="movie_select">–§–∏–ª—å–º</label>
                    <select id="movie_select" name="movie_select" class="form-select" required>
                        <option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º</option>
                        {% for movie in movies %}
                            <option value="{{ movie.id }}">{{ movie.movieTitle }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label" for="hall_select">–ó–∞–ª</label>
                    <select id="hall_select" name="hall_select" class="form-select" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ª</option>
                        {% for hall in halls %}
                            <option value="{{ hall.id }}">{{ hall.id }} - {{ hall.hallType }} ({{ hall.hallCapacity }} –º–µ—Å—Ç)</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label" for="session_date">–î–∞—Ç–∞</label>
                    <input type="date" id="session_date" name="session_date" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="session_time">–í—Ä–µ–º—è</label>
                    <input type="time" id="session_time" name="session_time" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label" for="session_price">–¶–µ–Ω–∞ –±–∏–ª–µ—Ç–∞ (‚ÇΩ)</label>
                    <input type="number" id="session_price" name="session_price" class="form-input" min="100" max="1000" required>
                </div>
                <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                    <button type="button" class="btn btn-secondary" onclick="closeSessionModal()">–û—Ç–º–µ–Ω–∞</button>
                    <button type="submit" class="btn btn-primary" id="submitBtn">–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å</button>
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        // Navigation
        document.querySelectorAll('.nav-linck').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Remove active class from all links and sections
                document.querySelectorAll('.nav-linck').forEach(l => l.classList.remove('active'));
                document.querySelectorAll('.content-section').forEach(s => s.classList.remove('active'));
                
                // Add active class to clicked link
                this.classList.add('active');
                
                // Show corresponding section
                const sectionName = this.dataset.section;
                document.querySelector(`.content-section[data-section="${sectionName}"]`).classList.add('active');
            });
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è change –¥–ª—è form-select
        document.querySelector('.form-select').addEventListener('change', function () {
            const sessionId = this.value; // –ü–æ–ª—É—á–∞–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ–∞–Ω—Å–∞
            if (sessionId) {
                generateOccupancySeats(sessionId); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Å—Ç
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é generateOccupancySeats
        function generateOccupancySeats(hallId) {
            console.log('Hall ID:', hallId); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è
            const seatsGrid = document.getElementById('occupancySeats');
            seatsGrid.innerHTML = '';

            seatsGrid.style.display = 'grid';
            seatsGrid.style.gridTemplateColumns = 'repeat(5, 1fr)';
            seatsGrid.style.gridTemplateRows = 'repeat(6, 1fr)';
            seatsGrid.style.gap = '10px';

            fetch(`/api/hall/${hallId}/seats`)
                .then(response => {
                    console.log('Response status:', response.status); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
                    if (!response.ok) throw new Error('Hall not found');
                    return response.json();
                })
                .then(seats => {
                    console.log('Seats data:', seats); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–∞—Ö
                    seats.forEach(seat => {
                        const seatElement = document.createElement('div');
                        const seatType = seat.seatType;
                        const isOccupied = seat.ticketStatus === 'occupied';
                        
                        seatElement.className = `seat ${seatType} ${isOccupied ? 'occupied' : ''}`;
                        seatElement.textContent = seat.searNumber;
                        seatsGrid.appendChild(seatElement);
                    });
                })
                .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Å—Ç:', error));
        }

        // Hall selector
        document.querySelectorAll('.hall-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                document.querySelectorAll('.hall-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                updateSessionSelect(this.dataset.hall);
            });
        });


        // Refund filters
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                
                const filter = this.dataset.filter;
                const refunds = document.querySelectorAll('.refund-card[data-status]');
                
                refunds.forEach(refund => {
                    if (filter === 'all' || refund.dataset.status === filter) {
                        refund.style.display = 'block';
                    } else {
                        refund.style.display = 'none';
                    }
                });
            });
        });

        // Generate occupancy seats
        function generateOccupancySeats(hallId) {
            const seatsGrid = document.getElementById('occupancySeats');
            seatsGrid.innerHTML = '';

            // Set grid layout to 5 columns and 6 rows
            seatsGrid.style.display = 'grid';
            seatsGrid.style.gridTemplateColumns = 'repeat(5, 1fr)';
            seatsGrid.style.gridTemplateRows = 'repeat(6, 1fr)';
            seatsGrid.style.gap = '10px';

            // Fetch seats data via AJAX
            fetch(`/api/hall/${hallId}/seats`)
            .then(response => response.json())
            .then(seats => {
                seats.forEach(seat => {
                const seatElement = document.createElement('div');
                const seatType = seat.seatType;
                const isOccupied = seat.ticketStatus === 'occupied';
                
                seatElement.className = `seat ${seatType} ${isOccupied ? 'occupied' : ''}`;
                seatElement.textContent = seat.searNumber;
                
                seatsGrid.appendChild(seatElement);
                });
            });
        }

        // Session modal functions
        function openSessionModal(sessionId = null) {
            const modal = document.getElementById('sessionModal');
            const title = document.getElementById('modalTitle');
            const submitBtn = document.getElementById('submitBtn');
            const sessionIdInput = document.getElementById('session_id');
            
            if (sessionId) {
                title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–∞–Ω—Å';
                submitBtn.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
                sessionIdInput.value = sessionId; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID —Å–µ–∞–Ω—Å–∞
                // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ —Å–µ–∞–Ω—Å–∞
                fetch(`/api/session/${sessionId}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('movie_select').value = data.movie.id;
                        document.getElementById('hall_select').value = data.hall.id;
                        document.getElementById('session_date').value = data.sessionData.split(' ')[0];
                        document.getElementById('session_time').value = data.sessionData.split(' ')[1];
                        document.getElementById('session_price').value = data.sessionPrice;
                    })
                    .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∞–Ω—Å–∞:', error));
            } else {
                title.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å';
                submitBtn.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å';
                sessionIdInput.value = ''; // –û—á–∏—â–∞–µ–º ID –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
                document.getElementById('sessionForm').reset();
            }
            
            modal.classList.add('active');
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –º–µ—Å—Ç
        function updateOccupancySeats() {
            const sessionSelect = document.querySelector('.session-select');
            const sessionId = sessionSelect.value;
            const seatsGrid = document.getElementById('occupancySeats');
            const occupancyStats = document.getElementById('occupancyStats');

            if (!sessionId) {
                seatsGrid.innerHTML = '<p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∞–Ω—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Å—Ç.</p>';
                occupancyStats.textContent = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∞–Ω—Å';
                return;
            }

            seatsGrid.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É –º–µ—Å—Ç
            seatsGrid.style.display = 'grid';
            seatsGrid.style.gridTemplateColumns = 'repeat(5, 1fr)'; // –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥ –≤–∞—à –∑–∞–ª
            seatsGrid.style.gap = '10px';

            fetch(`/api/session/${sessionId}/seats`)
                .then(response => {
                    if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    console.log('–î–∞–Ω–Ω—ã–µ API:', data); // –û—Ç–ª–∞–¥–∫–∞: –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å
                    const seats = data.seats;
                    const totalSeats = data.totalSeats;
                    const occupiedSeats = data.occupiedSeats;

                    seats.forEach(seat => {
                        const seatElement = document.createElement('div');
                        const isOccupied = seat.isOccupied; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —è–≤–Ω–æ–µ –ø–æ–ª–µ isOccupied
                        seatElement.className = `seat ${seat.seatType} ${isOccupied ? 'occupied' : ''}`;
                        seatElement.textContent = seat.searNumber;
                        seatElement.title = `–†—è–¥ ${seat.seatRow}, –ú–µ—Å—Ç–æ ${seat.searNumber} (${seat.seatType}, ${seat.ticketStatus})`;
                        seatsGrid.appendChild(seatElement);
                    });

                    const occupancyRate = totalSeats > 0 ? Math.round((occupiedSeats / totalSeats) * 100) : 0;
                    occupancyStats.textContent = `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ü—Ä–æ–¥–∞–Ω–æ ${occupiedSeats} –∏–∑ ${totalSeats} –º–µ—Å—Ç (${occupancyRate}% –∑–∞–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å)`;
                })
                .catch(error => {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Å—Ç:', error);
                    seatsGrid.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>';
                    occupancyStats.textContent = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏';
                });
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–ª–∞
        function updateSessionSelect(hallId) {
            const sessionSelect = document.querySelector('.session-select');
            sessionSelect.innerHTML = '<option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∞–Ω—Å</option>';

            fetch(`/api/hall/${hallId}/sessions`)
                .then(response => {
                    if (!response.ok) throw new Error('–°–µ–∞–Ω—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                    return response.json();
                })
                .then(sessions => {
                    sessions.forEach(session => {
                        const option = document.createElement('option');
                        option.value = session.id;
                        option.textContent = `${session.sessionData} - ${session.movieTitle}`;
                        sessionSelect.appendChild(option);
                    });

                    if (sessions.length > 0) {
                        sessionSelect.value = sessions[0].id;
                        updateOccupancySeats();
                    } else {
                        document.getElementById('occupancySeats').innerHTML = '<p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ª–∞.</p>';
                        document.getElementById('occupancyStats').textContent = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ù–µ—Ç —Å–µ–∞–Ω—Å–æ–≤';
                    }
                })
                .catch(error => {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–µ–∞–Ω—Å–æ–≤:', error);
                    sessionSelect.innerHTML = '<option value="" disabled selected>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–∞–Ω—Å–æ–≤</option>';
                });
        }

        document.getElementById('sessionForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(document.getElementById('sessionForm'));
            const data = Object.fromEntries(formData);
            const sessionId = data.session_id;
            
            const url = sessionId ? `/api/session/${sessionId}` : '/api/session';
            const method = sessionId ? 'PATCH' : 'POST';
            
            fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–µ–∞–Ω—Å–∞');
                    return response.json();
                })
                .then(() => {
                    alert(sessionId ? '–°–µ–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!' : '–°–µ–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
                    closeSessionModal();
                    location.reload();
                })
                .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
        });

        function closeSessionModal() {
            document.getElementById('sessionModal').classList.remove('active');
        }

        function editSession(sessionId) {
            openSessionModal(sessionId);
        }

        function deleteSession(sessionId) {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å–µ–∞–Ω—Å?')) {
                fetch(`/api/session/${sessionId}`, { method: 'DELETE' })
                    .then(() => {
                        alert(`–°–µ–∞–Ω—Å #${sessionId} —É–¥–∞–ª–µ–Ω`);
                        location.reload();
                    });
            }
        }

        // Refund actions
        function approveRefund(refundId) {
            if (confirm('–û–¥–æ–±—Ä–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –±–∏–ª–µ—Ç–∞?')) {
                fetch(`/api/refund/${refundId}/approve`, { method: 'POST' })
                    .then(() => {
                        alert(`–í–æ–∑–≤—Ä–∞—Ç #${refundId} –æ–¥–æ–±—Ä–µ–Ω`);
                        location.reload();
                    });
            }
        }

        function rejectRefund(refundId) {
            const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:');
            if (reason) {
                fetch(`/api/refund/${refundId}/reject`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ reason })
                })
                    .then(() => {
                        alert(`–í–æ–∑–≤—Ä–∞—Ç #${refundId} –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
                        location.reload();
                    });
            }
        }

        

        // Close modal on outside click
        document.getElementById('sessionModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeSessionModal();
            }
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function () {
            const activeHallBtn = document.querySelector('.hall-btn.active');
            if (activeHallBtn) {
                updateSessionSelect(activeHallBtn.dataset.hall);
            }
        });
    </script>
{% endblock %}